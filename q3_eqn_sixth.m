function eqn3 = q3_eqn_sixth(q1val, q2val, q3val, r, t, eps, d, e, f, q_BC, k)

eqn3 = eps * eps * (([zeros(1, 1 / k); q3val(1:(1 / k) - 3, :)] ...
    + [q3val(2:(1 / k) - 2, :); q_BC(3, :)] ...
    - 2.0 * q3val) / (k^2) ... % Second r deriv
    + r.^(-1) .* ([q3val(:, 2:(1 / k)) zeros((1 / k) - 2, 1)] ...
    + [zeros((1 / k) - 2, 1) q3val(:, 1:(1 / k) - 1)] ...
    - 2.0 * q3val) / (k^2) ... % Second theta deriv
    + r.^(-2) .* ([q1val(2:(1 / k) - 2, :); q_BC(1, :)] ...
    - [zeros(1, 1 / k); q1val(1:(1 / k) - 3, :)]) / (2.0 * k)) ... % First r deriv
    - (eps * eps * q3val .* r.^(-2) + t * q3val - 3.0 * q1val .* q3val ...
    - 3.0 * sqrt(3.0) * q2val .* q3val + 2.0 * q3val.^3 ...
    + 2.0 * q1val.^2 .* q3val + 2.0 * q2val.^2 .* q3val ...
    + (d / 5.0) * (5.0 * sqrt(6.0) * q1val.^3 .* q3val / 6.0 ...
    - sqrt(6.0) * q1val .* q2val.^2 .* q3val / 2.0 ...
    + sqrt(6.0) * q1val .* q3val.^3 ...
    + 3.0 * sqrt(2.0) * q1val.^2 .* q2val .* q3val / 2.0 ...
    + 3.0 * sqrt(2.0) * q2val.^3 .* q3val / 2.0 ...
    + 3.0 * sqrt(2.0) * q2val .* q3val.^3) ...
    + e * (q3val.^5 + q1val.^4 .* q3val + 2.0 * q1val.^2 .* q3val.^3 ...
    + q2val.^4 .* q3val + 2.0 * q2val.^2 .* q3val.^3 ...
    + 2.0 * q1val.^2 .* q2val.^2 .* q3val) ...
    + ((f - e) / 6.0) * (q1val.^4 .* q3val ...
    + sqrt(3.0) * q1val.^3 .* q2val .* q3val ...
    - 3.0 * q1val.^2 .* q2val.^2 .* q3val ...
    - 3.0 * sqrt(3.0) * q1val .* q2val.^3 .* q3val ...
    + 3.0 * q1val.^2 .* q3val.^3 / 2.0 ...
    + 3.0 * sqrt(3.0) * q1val .* q2val .* q3val.^3 ...
    + 9.0 * q2val.^2 .* q3val.^3 / 2.0));

eqn3(:, 1) = zeros((1 / k) - 2, 1);
eqn3(:, end) = zeros((1 / k) - 2, 1);

end